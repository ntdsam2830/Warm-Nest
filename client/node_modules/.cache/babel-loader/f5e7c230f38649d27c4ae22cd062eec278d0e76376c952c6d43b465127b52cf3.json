{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TX\\\\Desktop\\\\MyWork\\\\WarmNest\\\\client\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Login.scss\";\nimport { setLogin } from \"../redux/state\";\nimport { useDispatch, Provider } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { store } from \"../redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:3001/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      /* Get data after fetching */\n      const loggedIn = await response.json();\n      if (loggedIn) {\n        dispatch(setLogin({\n          user: loggedIn.user,\n          token: loggedIn.token\n        }));\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(\"Login failed\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login_content_form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Don't have an account? Sign in here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"6nC9BBhNayeerBudk8yRte0CtbE=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","setLogin","useDispatch","Provider","useNavigate","store","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","dispatch","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","loggedIn","json","user","token","error","console","log","message","className","children","onSubmit","type","placeholder","required","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["C:/Users/TX/Desktop/MyWork/WarmNest/client/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Login.scss\";\r\nimport { setLogin } from \"../redux/state\";\r\nimport { useDispatch, Provider } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { store } from \"../redux/store\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      /* Get data after fetching */\r\n      const loggedIn = await response.json();\r\n\r\n      if (loggedIn) {\r\n        dispatch(\r\n          setLogin({\r\n            user: loggedIn.user,\r\n            token: loggedIn.token,\r\n          })\r\n        );\r\n        navigate(\"/\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Login failed\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_content\">\r\n        <form className=\"login_content_form\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button type=\"submit\">LOGIN</button>\r\n        </form>\r\n        <a href=\"/register\">Don't have an account? Sign in here</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}